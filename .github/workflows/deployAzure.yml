name: Deploy to Azure Web App
on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed
#   push:
#     branches:
#       - main
#       - dev

env:
  AZURE_WEBAPP_NAME: Lab1DemoTodoList
  AZURE_RESOURCE_GROUP: CloudLab
  DOCKER_COMPOSE_FILE: lab/lab1
  DOCKER_COMPOSE_WEBAPP_FILE: lab\lab1\devops
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check Azure CLI version
        run: az --version

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set Azure Cloud
        run: az cloud set -n azurecloud

      - name: List Azure Subscriptions
        run: az account list

      - name: Verify Azure Subscription
        run: az account show
        
      - name: Check if Web App exists
        id: check_webapp
        run: |
          webapp_name="Lab1DemoTodoList"
          resource_group="CloudLab"

          if az webapp show --name $webapp_name --resource-group $resource_group &>/dev/null; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi
          
      - name: Create Web App
        if: steps.check_webapp.outputs.exists == 'false'
        run: |
          webapp_name="Lab1DemoTodoList"
          resource_group="CloudLab"

          echo "Creating Web App '$webapp_name'..."
          az webapp create --name $webapp_name --resource-group $resource_group --plan ASP-CloudLab-ae33
          echo "Web App created successfully."

      - name: Authenticate Docker to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Docker Compose images
        run: |
          cd $DOCKER_COMPOSE_FILE
          docker-compose pull
      - name: Check Pulled Docker Images
        run: docker images

      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Images from Docker Hub
        run: |
          docker pull flamesunrise/lab1_frontend:v1
          docker pull flamesunrise/lab1_backend:v1
          docker pull flamesunrise/lab1_database:v1
          
      - name: Deploy Docker Images to Azure Web App
        run: |
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_frontend:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_backend:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_database:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Deploy to Azure Web App
#         run: |
#           cd $DOCKER_COMPOSE_FILE
#           docker-compose up -d
          
#       - name: Configure Azure Web App with Docker Compose
#         run: |
#           az webapp config container set \
#             --name $AZURE_WEBAPP_NAME \
#             --resource-group $AZURE_RESOURCE_GROUP \
#             --docker-compose-file $DOCKER_COMPOSE_WEBAPP_FILE\docker-compose.yml
          
#       - name: Deploy to Azure Web App
#         run: |
#           az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
#           az webapp create --name Lab1DemoTodoList --resource-group CloudLab --plan ASP-CloudLab-ae33
#           az webapp config container set --name Lab1DemoTodoList --resource-group CloudLab --multicontainer-config-file docker-compose.yml
