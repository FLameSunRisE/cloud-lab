name: Build, Push, and Deploy to Azure Web App

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: Lab1DemoTodoList
  AZURE_RESOURCE_GROUP: CloudLab
  DOCKER_COMPOSE_FILE: lab/lab1
  DOCKER_COMPOSE_WEBAPP_FILE: lab/lab1/devops

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: "adopt"

#       - name: Cache Maven dependencies
#         uses: actions/cache@v2
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('lab/lab1/todo-list-server/pom.xml') }}
#           restore-keys: ${{ runner.os }}-maven-
          
#       - name: Build Backend
#         run: mvn clean package -f lab/lab1/todo-list-server/pom.xml

#       - name: Set up Docker Compose
#         run: docker-compose -f lab/lab1/docker-compose.yml build

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

# #       - name: Set up Docker Compose
# #         run: |
# #           cd lab/lab1
# #           docker-compose -f docker-compose.yml up -d

#       - name: Build and push
#         run: |
#           cd lab/lab1
#           docker-compose -f docker-compose.yml build
#           docker-compose -f docker-compose.yml push

  pull-images:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate Docker to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Docker Compose images
        run: |
          cd $DOCKER_COMPOSE_FILE
          docker-compose pull

      - name: Check Pulled Docker Images
        run: docker images

#       - name: Pull Docker Images from Docker Hub
#         run: |
#           docker pull flamesunrise/lab1_frontend:v1
#           docker pull flamesunrise/lab1_backend:v1
#           docker pull flamesunrise/lab1_database:v1

  deploy:
    needs: [build, pull-images]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure Cloud
        run: az cloud set -n azurecloud

      - name: List Azure Subscriptions
        run: az account list

      - name: Verify Azure Subscription
        run: az account show

      - name: Check if Web App exists
        id: check_webapp
        run: |
          webapp_name="Lab1DemoTodoList"
          resource_group="CloudLab"

          if az webapp show --name $webapp_name --resource-group $resource_group &>/dev/null; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Create Web App
        if: steps.check_webapp.outputs.exists == 'false'
        run: |
          webapp_name="Lab1DemoTodoList"
          resource_group="CloudLab"

          echo "Creating Web App '$webapp_name'..."
          az webapp create --name $webapp_name --resource-group $resource_group --plan ASP-CloudLab-ae33
          echo "Web App created successfully."

      - name: Deploy Docker Compose to Azure Web App
        run: |
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --multicontainer-config-type compose \
            --multicontainer-config-file lab/lab1/devops/docker-compose.yml
          az webapp up \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP
      
      - name: Deploy Docker Images to Azure Web App
        run: |
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_database:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_backend:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}
          az webapp config container set \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP \
            --docker-custom-image-name flamesunrise/lab1_frontend:v1 \
            --docker-registry-server-url https://index.docker.io/v1/ \
            --docker-registry-server-user ${{ secrets.DOCKERHUB_USERNAME }} \
            --docker-registry-server-password ${{ secrets.DOCKERHUB_PASSWORD }}
          az webapp up \
            --name $AZURE_WEBAPP_NAME \
            --resource-group $AZURE_RESOURCE_GROUP
